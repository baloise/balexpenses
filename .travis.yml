matrix:
  include:
    - os: linux
      language: android
      licenses:
        - 'android-sdk-preview-license-.+'
        - 'android-sdk-license-.+'
        - 'google-gdk-license-.+'
      android:
        components:
          - tools
          - platform-tools
          - build-tools-28.0.3
          - android-28
          - sys-img-armeabi-v7a-google_apis-25
          - extra-android-m2repository
          - extra-google-m2repository
          - extra-google-android-support
      jdk: oraclejdk8
      sudo: false
      addons:
        apt:
          # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
          sources:
            - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
          packages:
            - libstdc++6
            - fonts-droid
      before_script:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        - wget http://services.gradle.org/distributions/gradle-3.5-bin.zip
        - unzip -qq gradle-3.5-bin.zip
        - export GRADLE_HOME=$PWD/gradle-3.5
        - export PATH=$GRADLE_HOME/bin:$PATH
        - git clone https://github.com/flutter/flutter.git -b stable
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
      script:
        - cd frontend
        - flutter packages get
#        - flutter test // TODO: reactivate test
        - flutter drive --target=test_driver/app.dart
        - flutter build apk --release
      before_install:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        # Install the Android SDK Dependency.
        - export ANDROID_HOME=/opt/android-sdk-linux
        - cd /opt
        - wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        - cd -
        - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
        # Silence warning.
        - mkdir -p ~/.android
        - touch ~/.android/repositories.cfg
        # Accept licenses before installing components, no need to echo y for each component
        - yes | sdkmanager --licenses
        # Platform tools
        - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
        - sdkmanager --list | head -15
        # install older packages (for emulator)
        - sdkmanager "build-tools;28.0.3" "platforms;android-26" > /dev/null
        # Create and start emulator.
        - EMULATOR_API_LEVEL=22
        - ANDROID_ABI="default;armeabi-v7a"
        - sdkmanager "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI" > /dev/null
        - sdkmanager --list | head -15
        - echo no | avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI"
        - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader &
        # install flutter
        - git clone https://github.com/flutter/flutter.git -b beta
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        # Wait for emulator to finish startup.
        - ./script/android-wait-for-emulator.sh
        - adb shell input keyevent 82
        - flutter devices
        - yes | sdkmanager "platforms;android-28"
#    - os: osx
#      language: generic
#      osx_image: xcode11
#      before_script:
#        - brew update
#        - brew install libimobiledevice
#        - brew install ideviceinstaller
#        - brew install ios-deploy
#        - git clone https://github.com/flutter/flutter.git -b stable
#        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
#      script:
#        - cd frontend
#        - flutter packages get
##        - flutter test // TODO: reactivate test
#        - flutter build ios --no-codesign
cache:
  directories:
    - $HOME/.pub-cache